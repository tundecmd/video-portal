{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\computerist\\\\Desktop\\\\video-portal\\\\video-portal\\\\src\\\\components\\\\Row.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Row.css\";\nimport axios from \"../axios\";\nim; //const API_KEY = \"fad866c27c86c4b55dbd8f0e152453c6\";\n//const lang = \"language=en-US\";\n//const baseUrl = \"https://api.themoviedb.org/3\";\n\nconst imageBaseUrl = \"https://image.tmdb.org/t/p/\"; //const file_path = \"k68nPLbIST6NP96JmTxmZijEvCA.jpg\";\n\nconst Row = ({\n  title,\n  fetchUrl,\n  isLarge\n}) => {\n  const [movies, setMovies] = useState([]);\n  console.log(fetchUrl);\n  useEffect(() => {\n    async function fetchData() {\n      const res = await axios.get(fetchUrl);\n      setMovies(res.data.results);\n      return res;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n\n  const handleClick = movie => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      console.log(\"movie clicked\");\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.name) || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get(\"v\"));\n        console.log(trailerUrl);\n      }).catch(error => console.log(error));\n    }\n  };\n\n  console.log(\"movies:\", movies);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_posters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, movies && movies.map(movie => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: movie.id,\n      src: `${imageBaseUrl}/w200/${movie.poster_path}`,\n      alt: movie.name || movie.title,\n      className: \"row_poster\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    });\n  })));\n};\n\nexport default Row;","map":{"version":3,"sources":["C:/Users/computerist/Desktop/video-portal/video-portal/src/components/Row.jsx"],"names":["React","useState","useEffect","axios","im","imageBaseUrl","Row","title","fetchUrl","isLarge","movies","setMovies","console","log","fetchData","res","get","data","results","opts","height","width","playerVars","autoplay","handleClick","movie","trailerUrl","setTrailerUrl","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","map","id","poster_path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACAC,EAAE,C,CAEF;AACA;AAEA;;AACA,MAAMC,YAAY,GAAG,6BAArB,C,CACA;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAkC;AAC5C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,SAAf,GAA2B;AACzB,YAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUR,QAAV,CAAlB;AAEAG,MAAAA,SAAS,CAACI,GAAG,CAACE,IAAJ,CAASC,OAAV,CAAT;AACA,aAAOH,GAAP;AACD;;AACDD,IAAAA,SAAS;AACV,GARQ,EAQN,CAACN,QAAD,CARM,CAAT;AAUA,QAAMW,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,KAAK,EAAE,MAFI;AAGXC,IAAAA,UAAU,EAAE;AACV;AACAC,MAAAA,QAAQ,EAAE;AAFA;AAHD,GAAb;;AASA,QAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAIC,UAAJ,EAAgB;AACdC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KAFD,MAEO;AACLf,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEAe,MAAAA,YAAY,CAAC,CAAAH,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEI,IAAP,KAAe,EAAhB,CAAZ,CACGC,IADH,CACQC,GAAG,IAAI;AACX,cAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoB,IAAIC,GAAJ,CAAQH,GAAR,EAAaI,MAAjC,CAAlB;AACAR,QAAAA,aAAa,CAACK,SAAS,CAAChB,GAAV,CAAc,GAAd,CAAD,CAAb;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYa,UAAZ;AACD,OALH,EAMGU,KANH,CAMSC,KAAK,IAAIzB,OAAO,CAACC,GAAR,CAAYwB,KAAZ,CANlB;AAOD;AACF,GAdD;;AAgBAzB,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAL,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,MAAM,IACLA,MAAM,CAAC4B,GAAP,CAAWb,KAAK,IAAI;AAClB,wBACE;AACE,MAAA,GAAG,EAAEA,KAAK,CAACc,EADb;AAEE,MAAA,GAAG,EAAG,GAAElC,YAAa,SAAQoB,KAAK,CAACe,WAAY,EAFjD;AAGE,MAAA,GAAG,EAAEf,KAAK,CAACI,IAAN,IAAcJ,KAAK,CAAClB,KAH3B;AAIE,MAAA,SAAS,EAAC,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GATD,CAFJ,CAFF,CADF;AAkBD,CA1DD;;AA4DA,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Row.css\";\r\nimport axios from \"../axios\";\r\nim\r\n\r\n//const API_KEY = \"fad866c27c86c4b55dbd8f0e152453c6\";\r\n//const lang = \"language=en-US\";\r\n\r\n//const baseUrl = \"https://api.themoviedb.org/3\";\r\nconst imageBaseUrl = \"https://image.tmdb.org/t/p/\";\r\n//const file_path = \"k68nPLbIST6NP96JmTxmZijEvCA.jpg\";\r\n\r\nconst Row = ({ title, fetchUrl, isLarge }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  console.log(fetchUrl);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const res = await axios.get(fetchUrl);\r\n\r\n      setMovies(res.data.results);\r\n      return res;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1\r\n    }\r\n  };\r\n\r\n  const handleClick = movie => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      console.log(\"movie clicked\");\r\n\r\n      movieTrailer(movie?.name || \"\")\r\n        .then(url => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n          console.log(trailerUrl);\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  console.log(\"movies:\", movies);\r\n  return (\r\n    <div className=\"row\">\r\n      <h1>{title}</h1>\r\n      <div className=\"row_posters\">\r\n        {movies &&\r\n          movies.map(movie => {\r\n            return (\r\n              <img\r\n                key={movie.id}\r\n                src={`${imageBaseUrl}/w200/${movie.poster_path}`}\r\n                alt={movie.name || movie.title}\r\n                className=\"row_poster\"\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n"]},"metadata":{},"sourceType":"module"}
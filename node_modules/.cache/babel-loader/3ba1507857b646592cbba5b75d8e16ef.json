{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\video-portal\\\\src\\\\components\\\\Row.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Row.css\";\nimport axios from \"../axios\";\nimport movieTrailer from \"movie-trailer\";\nimport YouTube from \"react-youtube\"; //const API_KEY = \"fad866c27c86c4b55dbd8f0e152453c6\";\n//const lang = \"language=en-US\";\n//const baseUrl = \"https://api.themoviedb.org/3\";\n\nconst imageBaseUrl = \"https://image.tmdb.org/t/p/\"; //const file_path = \"k68nPLbIST6NP96JmTxmZijEvCA.jpg\";\n\nconst Row = ({\n  title,\n  fetchUrl,\n  isLarge\n}) => {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\"); //console.log(fetchUrl);\n\n  useEffect(() => {\n    async function fetchData() {\n      const res = await axios.get(fetchUrl);\n      setMovies(res.data.results);\n      return res;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n\n  const handleClick = movie => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      //console.log(movie);\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.name) || movie.title).then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get(\"v\")); //console.log(\"res:\", trailerUrl);\n      }).catch(error => console.log(\"error\", error));\n    }\n  }; //console.log(\"movies:\", movies);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_posters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, movies && movies.map(movie => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: movie.id,\n      onClick: () => handleClick(movie),\n      src: `${imageBaseUrl}/w200/${movie.poster_path}`,\n      alt: movie.name || movie.title,\n      className: \"row_poster\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    });\n  })), trailerUrl && /*#__PURE__*/React.createElement(YouTube, {\n    videoId: trailerUrl,\n    opts: opts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 22\n    }\n  }));\n};\n\nexport default Row;","map":{"version":3,"sources":["C:/Users/user/Documents/video-portal/src/components/Row.jsx"],"names":["React","useState","useEffect","axios","movieTrailer","YouTube","imageBaseUrl","Row","title","fetchUrl","isLarge","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","res","get","data","results","opts","height","width","playerVars","autoplay","handleClick","movie","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","map","id","poster_path"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\r\nimport \"./Row.css\";\r\nimport axios from \"../axios\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport YouTube from \"react-youtube\";\r\n\r\n//const API_KEY = \"fad866c27c86c4b55dbd8f0e152453c6\";\r\n//const lang = \"language=en-US\";\r\n//const baseUrl = \"https://api.themoviedb.org/3\";\r\nconst imageBaseUrl = \"https://image.tmdb.org/t/p/\";\r\n//const file_path = \"k68nPLbIST6NP96JmTxmZijEvCA.jpg\";\r\n\r\nconst Row = ({ title, fetchUrl, isLarge }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n  //console.log(fetchUrl);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const res = await axios.get(fetchUrl);\r\n\r\n      setMovies(res.data.results);\r\n      return res;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1\r\n    }\r\n  };\r\n\r\n  const handleClick = movie => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      //console.log(movie);\r\n\r\n      movieTrailer(movie?.name || movie.title)\r\n        .then(url => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n          //console.log(\"res:\", trailerUrl);\r\n        })\r\n        .catch(error => console.log(\"error\", error));\r\n    }\r\n  };\r\n\r\n  //console.log(\"movies:\", movies);\r\n  return (\r\n    <div className=\"row\">\r\n      <h1>{title}</h1>\r\n      <div className=\"row_posters\">\r\n        {movies &&\r\n          movies.map(movie => {\r\n            return (\r\n              <img\r\n                key={movie.id}\r\n                onClick={() => handleClick(movie)}\r\n                src={`${imageBaseUrl}/w200/${movie.poster_path}`}\r\n                alt={movie.name || movie.title}\r\n                className=\"row_poster\"\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n"]},"metadata":{},"sourceType":"module"}